<!-- 便利な関数（日付・時間） -->

<!-- 現在時刻を取得 -->
<?php
  echo time()."<br>";
  var_dump(time()); echo "<br><br>";
?>

<!-- タイムスタンプから日付に戻す -->
<?php
// 現在時刻を取得
echo date("Y-m-d H:i:s", time())."<br>";

// 例：2017/4/12 16:00:00のタイムスタンプを変換
echo date("Y-m-d H:i:s", 1491980400)."<br>";

echo date("Y年m月d日 H時i分s秒", time())."<br><br>";
?>

<!-- 特定日付のタイムスタンプを取得 -->
<?php
echo strtotime("2017/2/16 11:25:00")."<br>";

// 日付ではない指定方法

// 先週の日曜日
echo strtotime("last Sunday")."<br>";
// 2日後
echo strtotime("+2 day")."<br><br><br>";
?>


<?php
  echo "IT用語<br><br><br>";


  echo "ログ(意味、確認の仕方)<br>";
  echo "ログとはシステムの利用状況や通信の記録を取ること｡コンピュータの世界における、やったことや起こったことの「記録」。";
  echo "<br><br><br>";


  echo "クラウドサーバー<br>";
  echo "サーバーのスペックのカスタマイズが可能な柔軟性の高いサーバーレンタルサービス。";
  echo "<br><br><br>";


  echo "レンタルサーバー<br>";
  echo "自身でサーバーの運用や管理をする必要がない為、手軽で使いやすいサーバーレンタルサービス。";
  echo "<br><br><br>";


  echo "VPS<br>";
  echo "VPSとは仮想専用サーバのことです。クラウドサーバと同じように、1 つの物理サーバ内に仮想的に専用サーバを構築した上でサービスが提供されます。<br>専用サーバのように他の利用者の影響を排除しながら、利用料金を抑えられることがメリットです。";
  echo "<br><br><br><br><br>";



  echo "PHPのFWの種類と特徴<br><br>";


  echo "・Laravel<br>
  Laravelは、2011年に登場したPHPフレームワークです。
  近年、PHPエンジニアの中で人気が急騰しているフレームワークです。<br>
  GitHubでは、PHPフレームワークの中で最高評価を受けています。Love beautiful code? We do tooという理念を掲げ、PHP初心者でも美しいコードを書けるという点が評価されているためです。<br>
  Laravelはわりやすいだけでなく、コードが書きやすく、直ぐに書き始められることなどが魅力です。<br><br>
 
  ・CakePHP<br>
  CakePHPは、2005年に登場しオープンソースで開発されたPHPフレームワークです。<br>
  有名なPHPフレームワークの1つで、ケーキを焼く様に簡単にPHPで開発ができるフレームワークを目指して開発されています。<br>
  Ruby on Railsの影響を強く受けており，Webアプリケーションを高速に開発出来ます。<br>
  CakePHPのメリットは、MVCを採用していることやbakeコマンドによるプログラム自動生成機能があること、日本語に翻訳された優れたドキュメントの多いことなどが挙げられます。<br><br><br>
  

  ・Symfony<br>
  Symfonyは、2005年に登場したMITライセンスに基づくオープンソースのPHP5用フレームワークです。<br>
  機能テストやデバックの為のツール群が標準装備されていたり、毎年2回リリースアップされ、サポートについても明確なルールを持っているのが特長です。<br>
  保守性と安定性を重視した構造になっており、CakePHPと同様Ruby on Railsの影響を受けています。<br><br><br>

  
  ・CodeIgniter<br>
  CodeIgniterは、2006年に登場したPHPフレームワークです。<br>
  CodeIgniterはコーディング規約への制限が緩く、自由度が高いという特徴があります。<br>
  CodeIgniterもMVCモデルを採用しており、コードも簡単で軽量Webアプリケーション開発に向いています。<br><br><br>
   
  
  ・ZendFramework<br>
  ZendFrameworkは、PHP5用MVCフレームワークです。<br>
  ZendFrameworkの技術パートナーにMicrosoftやIBM、Googleなど世界の優良企業があり、安心できるPHPフレームワークです。<br>
  ZendFrameworkは、拡張性が高く他のPHPフレームワークほど規約を使わず、各アプリケーションに応じて上書きできる特長があります。<br><br><br>
   
  
  ・Phalcon<br>
  Phalconは、2012年に登場したフルスタック高速PHPフレームワークです。<br>
  Phalconは、フレームワークコア部分がひとつのPHP機能拡張としてC言語で実装されているため、PHP文法解析やオペコード変換処理が必要なくなり、高速に動作出来ることが特長です。<br><br><br>
   
  
  ・Slim<br>
  Slimは、PHPのオープンソースマイクロフレームワークです。<br>
  マイクロフレームワークとは、シンプル構成フレームワークのことを指します。<br>
  フレームワーク習得のためのコストがあまり掛からないことやシンプルなPHPWebアプリケーション、API開発向きであることが特長です。その他、PSR-7とミドルウェア構造を採用しています。<br><br><br>
   
  
  ・Yii
  Yiiは、大規模なWebアプリケーション開発に適したコンポーネントベースのPHPフレームワークです。  
  日本での利用は少ないですが、世界的には開発エンジニアが多いPHPフレームワークです。<br>
  Yiiは、軽量なキャッシュ機能があり、アクセス負荷が大きいサービスに適しており、ポータルサイトやCMSなどに使われることが多いPHPフレームワークです。<br><br><br>
   

  
  ・FuelPHP<br>
  FuelPHPは、2010年に登場したFuelPHPは高速かつ軽量なオープンソースPHPフレームワークです。<br>
  FuelPHPは、既存のPHPフレームワーク（CakePHP、CodeIgniter、Symfonyなど）の長所が活かされているため、高度なWebアプリケーション開発に適しています。<br><br><br>
  

  
  ・Flight<br>
  Flightは、シンプルをコンセプトに開発されたフレームワークです。<br>
  ドキュメントもシンプルで誰でもすぐに使用できるフレームワークであり、RESTfulWebアプリケーション開発向きです。<br><br><br><br><br>";




?>